define(["require","./normalize"],function(req,normalize){function compress(css){if("none"==config.optimizeCss)return css;if("undefined"!=typeof process&&process.versions&&process.versions.node&&require.nodeRequire){try{var csso=require.nodeRequire("csso")}catch(e){console.log('Compression module not installed. Use "npm install csso -g" to enable.');return css}var csslen=css.length;try{css=csso.justDoIt(css)}catch(e){console.log("Compression failed due to a CSS syntax error.");return css}console.log("Compressed CSS output to "+Math.round(css.length/csslen*100)+"%.");return css}console.log("Compression not supported outside of nodejs environments.");return css}function loadFile(path){if("undefined"!=typeof process&&process.versions&&process.versions.node&&require.nodeRequire){var fs=require.nodeRequire("fs"),file=fs.readFileSync(path,"utf8");return 0===file.indexOf("\ufeff")?file.substring(1):file}var stringBuffer,line,file=new java.io.File(path),lineSeparator=java.lang.System.getProperty("line.separator"),input=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file),"utf-8"));try{stringBuffer=new java.lang.StringBuffer;line=input.readLine();line&&line.length()&&65279===line.charAt(0)&&(line=line.substring(1));stringBuffer.append(line);for(;null!==(line=input.readLine());)stringBuffer.append(lineSeparator).append(line);return String(stringBuffer.toString())}finally{input.close()}}function saveFile(path,data){if("undefined"!=typeof process&&process.versions&&process.versions.node&&require.nodeRequire){var fs=require.nodeRequire("fs");fs.writeFileSync(path,data,"utf8")}else{var content=new java.lang.String(data),output=new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(path),"utf-8"));try{output.write(content,0,content.length());output.flush()}finally{output.close()}}}function escape(content){return content.replace(/(["'\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r")}var siteRoot,cssAPI={},isWindows=!!process.platform.match(/^win/),absUrlRegEx=/^([^\:\/]+:\/)?\//,writeCSSDefinition="define('@writecss', function() {return function writeCss(c) {var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));};});",baseParts=req.toUrl("base_url").split("/");baseParts[baseParts.length-1]="";var config,baseUrl=baseParts.join("/"),writeCSSForLayer=!0,layerBuffer=[],cssBuffer={};cssAPI.load=function(name,req,load,_config){config=config||_config;if(!siteRoot){siteRoot=path.resolve(config.dir||path.dirname(config.out),config.siteRoot||".")+"/";isWindows&&(siteRoot=siteRoot.replace(/\\/g,"/"))}if(name.match(absUrlRegEx))return load();var fileUrl=req.toUrl(name+".css");isWindows&&(fileUrl=fileUrl.replace(/\\/g,"/"));var fileSiteUrl=fileUrl;if(fileSiteUrl.indexOf(baseUrl)<0){var appRoot=req.toUrl(config.appDir);isWindows&&(appRoot=appRoot.replace(/\\/g,"/"));0==fileSiteUrl.indexOf(appRoot)&&(fileSiteUrl=siteRoot+fileSiteUrl.substring(appRoot.length))}cssBuffer[name]=normalize(loadFile(fileUrl),fileSiteUrl,siteRoot);load()};cssAPI.normalize=function(name,normalize){".css"==name.substr(name.length-4,4)&&(name=name.substr(0,name.length-4));return normalize(name)};cssAPI.write=function(pluginName,moduleName,write,parse){var cssModule;if(!moduleName.match(absUrlRegEx)){layerBuffer.push(cssBuffer[moduleName]);global._requirejsCssData?global._requirejsCssData.usedBy.css=!0:global._requirejsCssData={usedBy:{css:!0},css:""};if(0!=config.buildCSS){var style=cssBuffer[moduleName];if(config.writeCSSModule&&style){if(writeCSSForLayer){writeCSSForLayer=!1;write(writeCSSDefinition)}cssModule='define(["@writecss"], function(writeCss){\n writeCss("'+escape(compress(style))+'");\n})'}else cssModule="define(function(){})";write.asModule(pluginName+"!"+moduleName,cssModule)}}};cssAPI.onLayerEnd=function(write,data){if(config.separateCSS&&config.IESelectorLimit)throw"RequireCSS: separateCSS option is not compatible with ensuring the IE selector limit";if(config.separateCSS){var outPath=data.path.replace(/(\.js)?$/,".css");console.log("Writing CSS! file: "+outPath+"\n");var css=layerBuffer.join("");process.nextTick(function(){if(global._requirejsCssData){css=global._requirejsCssData.css=css+global._requirejsCssData.css;delete global._requirejsCssData.usedBy.css;0===Object.keys(global._requirejsCssData.usedBy).length&&delete global._requirejsCssData}saveFile(outPath,compress(css))})}else if(0!=config.buildCSS&&1!=config.writeCSSModule)for(var styles=config.IESelectorLimit?layerBuffer:[layerBuffer.join("")],i=0;i<styles.length;i++){if(""==styles[i])return;write("(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('"+escape(compress(styles[i]))+"');\n")}layerBuffer=[];writeCSSForLayer=!0};return cssAPI});