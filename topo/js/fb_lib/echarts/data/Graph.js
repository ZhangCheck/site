define(["require","zrender/tool/util"],function(require){var util=require("zrender/tool/util"),Graph=function(directed){this._directed=directed||!1;this.nodes=[];this.edges=[];this._nodesMap={};this._edgesMap={}};Graph.prototype.isDirected=function(){return this._directed};Graph.prototype.addNode=function(id,data){if(this._nodesMap[id])return this._nodesMap[id];var node=new Graph.Node(id,data);this.nodes.push(node);this._nodesMap[id]=node;return node};Graph.prototype.getNodeById=function(id){return this._nodesMap[id]};Graph.prototype.addEdge=function(n1,n2,data){"string"==typeof n1&&(n1=this._nodesMap[n1]);"string"==typeof n2&&(n2=this._nodesMap[n2]);if(n1&&n2){var key=n1.id+"-"+n2.id;if(this._edgesMap[key])return this._edgesMap[key];var edge=new Graph.Edge(n1,n2,data);if(this._directed){n1.outEdges.push(edge);n2.inEdges.push(edge)}n1.edges.push(edge);n1!==n2&&n2.edges.push(edge);this.edges.push(edge);this._edgesMap[key]=edge;return edge}};Graph.prototype.removeEdge=function(edge){var n1=edge.node1,n2=edge.node2,key=n1.id+"-"+n2.id;if(this._directed){n1.outEdges.splice(util.indexOf(n1.outEdges,edge),1);n2.inEdges.splice(util.indexOf(n2.inEdges,edge),1)}n1.edges.splice(util.indexOf(n1.edges,edge),1);n1!==n2&&n2.edges.splice(util.indexOf(n2.edges,edge),1);delete this._edgesMap[key];this.edges.splice(util.indexOf(this.edges,edge),1)};Graph.prototype.getEdge=function(n1,n2){"string"!=typeof n1&&(n1=n1.id);"string"!=typeof n2&&(n2=n2.id);return this._directed?this._edgesMap[n1+"-"+n2]:this._edgesMap[n1+"-"+n2]||this._edgesMap[n2+"-"+n1]};Graph.prototype.removeNode=function(node){if("string"==typeof node){node=this._nodesMap[node];if(!node)return}delete this._nodesMap[node.id];this.nodes.splice(util.indexOf(this.nodes,node),1);for(var i=0;i<this.edges.length;){var edge=this.edges[i];edge.node1===node||edge.node2===node?this.removeEdge(edge):i++}};Graph.prototype.filterNode=function(cb,context){for(var len=this.nodes.length,i=0;len>i;)if(cb.call(context,this.nodes[i],i))i++;else{this.removeNode(this.nodes[i]);len--}};Graph.prototype.filterEdge=function(cb,context){for(var len=this.edges.length,i=0;len>i;)if(cb.call(context,this.edges[i],i))i++;else{this.removeEdge(this.edges[i]);len--}};Graph.prototype.eachNode=function(cb,context){for(var len=this.nodes.length,i=0;len>i;i++)this.nodes[i]&&cb.call(context,this.nodes[i],i)};Graph.prototype.eachEdge=function(cb,context){for(var len=this.edges.length,i=0;len>i;i++)this.edges[i]&&cb.call(context,this.edges[i],i)};Graph.prototype.clear=function(){this.nodes.length=0;this.edges.length=0;this._nodesMap={};this._edgesMap={}};Graph.prototype.breadthFirstTraverse=function(cb,startNode,direction,context){"string"==typeof startNode&&(startNode=this._nodesMap[startNode]);if(startNode){var edgeType="edges";"out"===direction?edgeType="outEdges":"in"===direction&&(edgeType="inEdges");for(var i=0;i<this.nodes.length;i++)this.nodes[i].__visited=!1;if(!cb.call(context,startNode,null))for(var queue=[startNode];queue.length;)for(var currentNode=queue.shift(),edges=currentNode[edgeType],i=0;i<edges.length;i++){var e=edges[i],otherNode=e.node1===currentNode?e.node2:e.node1;if(!otherNode.__visited){if(cb.call(otherNode,otherNode,currentNode))return;queue.push(otherNode);otherNode.__visited=!0}}}};Graph.prototype.clone=function(){for(var graph=new Graph(this._directed),i=0;i<this.nodes.length;i++)graph.addNode(this.nodes[i].id,this.nodes[i].data);for(var i=0;i<this.edges.length;i++){var e=this.edges[i];graph.addEdge(e.node1.id,e.node2.id,e.data)}return graph};var Node=function(id,data){this.id=id;this.data=data||null;this.inEdges=[];this.outEdges=[];this.edges=[]};Node.prototype.degree=function(){return this.edges.length};Node.prototype.inDegree=function(){return this.inEdges.length};Node.prototype.outDegree=function(){return this.outEdges.length};var Edge=function(node1,node2,data){this.node1=node1;this.node2=node2;this.data=data||null};Graph.Node=Node;Graph.Edge=Edge;Graph.fromMatrix=function(nodesData,matrix,directed){if(matrix&&matrix.length&&matrix[0].length===matrix.length&&nodesData.length===matrix.length){for(var size=matrix.length,graph=new Graph(directed),i=0;size>i;i++){var node=graph.addNode(nodesData[i].id,nodesData[i]);node.data.value=0;directed&&(node.data.outValue=node.data.inValue=0)}for(var i=0;size>i;i++)for(var j=0;size>j;j++){var item=matrix[i][j];if(directed){graph.nodes[i].data.outValue+=item;graph.nodes[j].data.inValue+=item}graph.nodes[i].data.value+=item;graph.nodes[j].data.value+=item}for(var i=0;size>i;i++)for(var j=i;size>j;j++){var item=matrix[i][j];if(0!==item){var n1=graph.nodes[i],n2=graph.nodes[j],edge=graph.addEdge(n1,n2,{});edge.data.weight=item;if(i!==j&&directed&&matrix[j][i]){var inEdge=graph.addEdge(n2,n1,{});inEdge.data.weight=matrix[j][i]}}}return graph}};return Graph});