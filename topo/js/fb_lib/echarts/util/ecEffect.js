define(["require","../util/ecData","zrender/shape/Circle","zrender/shape/Image","zrender/tool/curve","../util/shape/Icon","../util/shape/Symbol","zrender/shape/ShapeBundle","zrender/shape/Polyline","zrender/tool/vector","zrender/tool/env"],function(require){function point(zr,effectList,shape,zlevel){var effectShape,effect=shape.effect,color=effect.color||shape.style.strokeColor||shape.style.color,shadowColor=effect.shadowColor||color,size=effect.scaleSize,distance=effect.bounceDistance,shadowBlur="undefined"!=typeof effect.shadowBlur?effect.shadowBlur:size;if("image"!==shape.type){effectShape=new IconShape({zlevel:zlevel,style:{brushType:"stroke",iconType:"droplet"!=shape.style.iconType?shape.style.iconType:"circle",x:shadowBlur+1,y:shadowBlur+1,n:shape.style.n,width:shape.style._width*size,height:shape.style._height*size,lineWidth:1,strokeColor:color,shadowColor:shadowColor,shadowBlur:shadowBlur},draggable:!1,hoverable:!1});"pin"==shape.style.iconType&&(effectShape.style.y+=effectShape.style.height/2*1.5);if(canvasSupported){effectShape.style.image=zr.shapeToImage(effectShape,effectShape.style.width+2*shadowBlur+2,effectShape.style.height+2*shadowBlur+2).style.image;effectShape=new ImageShape({zlevel:effectShape.zlevel,style:effectShape.style,draggable:!1,hoverable:!1})}}else effectShape=new ImageShape({zlevel:zlevel,style:shape.style,draggable:!1,hoverable:!1});ecData.clone(shape,effectShape);effectShape.position=shape.position;effectList.push(effectShape);zr.addShape(effectShape);var devicePixelRatio="image"!==shape.type?window.devicePixelRatio||1:1,offset=(effectShape.style.width/devicePixelRatio-shape.style._width)/2;effectShape.style.x=shape.style._x-offset;effectShape.style.y=shape.style._y-offset;"pin"==shape.style.iconType&&(effectShape.style.y-=shape.style.height/2*1.5);var duration=100*(effect.period+10*Math.random());zr.modShape(shape.id,{invisible:!0});var centerX=effectShape.style.x+effectShape.style.width/2/devicePixelRatio,centerY=effectShape.style.y+effectShape.style.height/2/devicePixelRatio;if("scale"===effect.type){zr.modShape(effectShape.id,{scale:[.1,.1,centerX,centerY]});zr.animate(effectShape.id,"",effect.loop).when(duration,{scale:[1,1,centerX,centerY]}).done(function(){shape.effect.show=!1;zr.delShape(effectShape.id)}).start()}else zr.animate(effectShape.id,"style",effect.loop).when(duration,{y:effectShape.style.y-distance}).when(2*duration,{y:effectShape.style.y}).done(function(){shape.effect.show=!1;zr.delShape(effectShape.id)}).start()}function largePoint(zr,effectList,shape,zlevel){var effect=shape.effect,color=effect.color||shape.style.strokeColor||shape.style.color,size=effect.scaleSize,shadowColor=effect.shadowColor||color,shadowBlur="undefined"!=typeof effect.shadowBlur?effect.shadowBlur:2*size,devicePixelRatio=window.devicePixelRatio||1,effectShape=new SymbolShape({zlevel:zlevel,position:shape.position,scale:shape.scale,style:{pointList:shape.style.pointList,iconType:shape.style.iconType,color:color,strokeColor:color,shadowColor:shadowColor,shadowBlur:shadowBlur*devicePixelRatio,random:!0,brushType:"fill",lineWidth:1,size:shape.style.size},draggable:!1,hoverable:!1});effectList.push(effectShape);zr.addShape(effectShape);zr.modShape(shape.id,{invisible:!0});for(var duration=Math.round(100*effect.period),clip1={},clip2={},i=0;20>i;i++){effectShape.style["randomMap"+i]=0;clip1={};clip1["randomMap"+i]=100;clip2={};clip2["randomMap"+i]=0;effectShape.style["randomMap"+i]=100*Math.random();zr.animate(effectShape.id,"style",!0).when(duration,clip1).when(2*duration,clip2).when(3*duration,clip1).when(4*duration,clip1).delay(Math.random()*duration*i).start()}}function line(zr,effectList,shape,zlevel,isLarge){var effect=shape.effect,shapeStyle=shape.style,color=effect.color||shapeStyle.strokeColor||shapeStyle.color,shadowColor=effect.shadowColor||shapeStyle.strokeColor||color,size=shapeStyle.lineWidth*effect.scaleSize,shadowBlur="undefined"!=typeof effect.shadowBlur?effect.shadowBlur:size,effectShape=new CircleShape({zlevel:zlevel,style:{x:shadowBlur,y:shadowBlur,r:size,color:color,shadowColor:shadowColor,shadowBlur:shadowBlur},hoverable:!1}),offset=0;if(canvasSupported&&!isLarge){var zlevel=effectShape.zlevel;effectShape=zr.shapeToImage(effectShape,2*(size+shadowBlur),2*(size+shadowBlur));effectShape.zlevel=zlevel;effectShape.hoverable=!1;offset=shadowBlur}if(!isLarge){ecData.clone(shape,effectShape);effectShape.position=shape.position;effectList.push(effectShape);zr.addShape(effectShape)}var effectDone=function(){if(!isLarge){shape.effect.show=!1;zr.delShape(effectShape.id)}effectShape.effectAnimator=null};if(shape instanceof Polyline){for(var distanceList=[0],totalDist=0,pointList=shapeStyle.pointList,controlPointList=shapeStyle.controlPointList,i=1;i<pointList.length;i++){if(controlPointList){var cp1=controlPointList[2*(i-1)],cp2=controlPointList[2*(i-1)+1];totalDist+=vec2.dist(pointList[i-1],cp1)+vec2.dist(cp1,cp2)+vec2.dist(cp2,pointList[i])}else totalDist+=vec2.dist(pointList[i-1],pointList[i]);distanceList.push(totalDist)}for(var obj={p:0},animator=zr.animation.animate(obj,{loop:effect.loop}),i=0;i<distanceList.length;i++)animator.when(distanceList[i]*effect.period,{p:i});animator.during(function(){var x,y,i=Math.floor(obj.p);if(i==pointList.length-1){x=pointList[i][0];y=pointList[i][1]}else{var t=obj.p-i,p0=pointList[i],p1=pointList[i+1];if(controlPointList){var cp1=controlPointList[2*i],cp2=controlPointList[2*i+1];x=curveTool.cubicAt(p0[0],cp1[0],cp2[0],p1[0],t);y=curveTool.cubicAt(p0[1],cp1[1],cp2[1],p1[1],t)}else{x=(p1[0]-p0[0])*t+p0[0];y=(p1[1]-p0[1])*t+p0[1]}}effectShape.style.x=x;effectShape.style.y=y;isLarge||zr.modShape(effectShape)}).done(effectDone).start();animator.duration=totalDist*effect.period;effectShape.effectAnimator=animator}else{var x0=shapeStyle.xStart-offset,y0=shapeStyle.yStart-offset,x2=shapeStyle.xEnd-offset,y2=shapeStyle.yEnd-offset;effectShape.style.x=x0;effectShape.style.y=y0;var distance=(x2-x0)*(x2-x0)+(y2-y0)*(y2-y0),duration=Math.round(Math.sqrt(Math.round(distance*effect.period*effect.period)));if(shape.style.curveness>0){var x1=shapeStyle.cpX1-offset,y1=shapeStyle.cpY1-offset;effectShape.effectAnimator=zr.animation.animate(effectShape,{loop:effect.loop}).when(duration,{p:1}).during(function(target,t){effectShape.style.x=curveTool.quadraticAt(x0,x1,x2,t);effectShape.style.y=curveTool.quadraticAt(y0,y1,y2,t);isLarge||zr.modShape(effectShape)}).done(effectDone).start()}else effectShape.effectAnimator=zr.animation.animate(effectShape.style,{loop:effect.loop}).when(duration,{x:x2,y:y2}).during(function(){isLarge||zr.modShape(effectShape)}).done(effectDone).start();effectShape.effectAnimator.duration=duration}return effectShape}function largeLine(zr,effectList,shape,zlevel){var effectShape=new ShapeBundle({style:{shapeList:[]},zlevel:zlevel,hoverable:!1}),shapeList=shape.style.shapeList,effect=shape.effect;effectShape.position=shape.position;for(var maxDuration=0,subEffectAnimators=[],i=0;i<shapeList.length;i++){shapeList[i].effect=effect;var subEffectShape=line(zr,null,shapeList[i],zlevel,!0),subEffectAnimator=subEffectShape.effectAnimator;effectShape.style.shapeList.push(subEffectShape);subEffectAnimator.duration>maxDuration&&(maxDuration=subEffectAnimator.duration);if(0===i){effectShape.style.color=subEffectShape.style.color;effectShape.style.shadowBlur=subEffectShape.style.shadowBlur;effectShape.style.shadowColor=subEffectShape.style.shadowColor}subEffectAnimators.push(subEffectAnimator)}effectList.push(effectShape);zr.addShape(effectShape);var clearAllAnimators=function(){for(var i=0;i<subEffectAnimators.length;i++)subEffectAnimators[i].stop()};if(maxDuration){effectShape.__dummy=0;var animator=zr.animate(effectShape.id,"",effect.loop).when(maxDuration,{__dummy:1}).during(function(){zr.modShape(effectShape)}).done(function(){shape.effect.show=!1;zr.delShape(effectShape.id)}).start(),oldStop=animator.stop;animator.stop=function(){clearAllAnimators();oldStop.call(this)}}}var ecData=require("../util/ecData"),CircleShape=require("zrender/shape/Circle"),ImageShape=require("zrender/shape/Image"),curveTool=require("zrender/tool/curve"),IconShape=require("../util/shape/Icon"),SymbolShape=require("../util/shape/Symbol"),ShapeBundle=require("zrender/shape/ShapeBundle"),Polyline=require("zrender/shape/Polyline"),vec2=require("zrender/tool/vector"),canvasSupported=require("zrender/tool/env").canvasSupported;return{point:point,largePoint:largePoint,line:line,largeLine:largeLine}});