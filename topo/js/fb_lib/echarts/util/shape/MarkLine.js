define(["require","zrender/shape/Base","./Icon","zrender/shape/Line","zrender/shape/BezierCurve","zrender/tool/area","zrender/shape/util/dashedLineTo","zrender/tool/util","zrender/tool/curve"],function(require){function MarkLine(options){Base.call(this,options);this.style.curveness>0&&this.updatePoints(this.style);this.highlightStyle.curveness>0&&this.updatePoints(this.highlightStyle)}var Base=require("zrender/shape/Base"),IconShape=require("./Icon"),LineShape=require("zrender/shape/Line"),lineInstance=new LineShape({}),CurveShape=require("zrender/shape/BezierCurve"),curveInstance=new CurveShape({}),area=require("zrender/tool/area"),dashedLineTo=require("zrender/shape/util/dashedLineTo"),zrUtil=require("zrender/tool/util"),curveTool=require("zrender/tool/curve");MarkLine.prototype={type:"mark-line",brush:function(ctx,isHighlight){var style=this.style;isHighlight&&(style=this.getHighlightStyle(style,this.highlightStyle||{}));ctx.save();this.setContext(ctx,style);this.setTransform(ctx);ctx.save();ctx.beginPath();this.buildPath(ctx,style);ctx.stroke();ctx.restore();this.brushSymbol(ctx,style,0);this.brushSymbol(ctx,style,1);this.drawText(ctx,style,this.style);ctx.restore()},buildPath:function(ctx,style){var lineType=style.lineType||"solid";ctx.moveTo(style.xStart,style.yStart);if(style.curveness>0){var lineDash=null;switch(lineType){case"dashed":lineDash=[5,5];break;case"dotted":lineDash=[1,1]}lineDash&&ctx.setLineDash&&ctx.setLineDash(lineDash);ctx.quadraticCurveTo(style.cpX1,style.cpY1,style.xEnd,style.yEnd)}else if("solid"==lineType)ctx.lineTo(style.xEnd,style.yEnd);else{var dashLength=(style.lineWidth||1)*("dashed"==style.lineType?5:1);dashedLineTo(ctx,style.xStart,style.yStart,style.xEnd,style.yEnd,dashLength)}},updatePoints:function(style){var curveness=style.curveness||0,inv=1,x0=style.xStart,y0=style.yStart,x2=style.xEnd,y2=style.yEnd,x1=(x0+x2)/2-inv*(y0-y2)*curveness,y1=(y0+y2)/2-inv*(x2-x0)*curveness;style.cpX1=x1;style.cpY1=y1},brushSymbol:function(ctx,style,idx){if("none"!=style.symbol[idx]){ctx.save();ctx.beginPath();ctx.lineWidth=style.symbolBorder;ctx.strokeStyle=style.symbolBorderColor;var symbol=style.symbol[idx].replace("empty","").toLowerCase();style.symbol[idx].match("empty")&&(ctx.fillStyle="#fff");var x0=style.xStart,y0=style.yStart,x2=style.xEnd,y2=style.yEnd,x=0===idx?x0:x2,y=0===idx?y0:y2,curveness=style.curveness||0,rotate=null!=style.symbolRotate[idx]?style.symbolRotate[idx]-0:0;rotate=rotate/180*Math.PI;if("arrow"==symbol&&0===rotate)if(0===curveness){var sign=0===idx?-1:1;rotate=Math.PI/2+Math.atan2(sign*(y2-y0),sign*(x2-x0))}else{var x1=style.cpX1,y1=style.cpY1,quadraticDerivativeAt=curveTool.quadraticDerivativeAt,dx=quadraticDerivativeAt(x0,x1,x2,idx),dy=quadraticDerivativeAt(y0,y1,y2,idx);rotate=Math.PI/2+Math.atan2(dy,dx)}ctx.translate(x,y);0!==rotate&&ctx.rotate(rotate);var symbolSize=style.symbolSize[idx];IconShape.prototype.buildPath(ctx,{x:-symbolSize,y:-symbolSize,width:2*symbolSize,height:2*symbolSize,iconType:symbol});ctx.closePath();ctx.fill();ctx.stroke();ctx.restore()}},getRect:function(style){style.curveness>0?curveInstance.getRect(style):lineInstance.getRect(style);return style.__rect},isCover:function(x,y){var originPos=this.transformCoordToLocal(x,y);x=originPos[0];y=originPos[1];return this.isCoverRect(x,y)?this.style.curveness>0?area.isInside(curveInstance,this.style,x,y):area.isInside(lineInstance,this.style,x,y):!1}};zrUtil.inherits(MarkLine,Base);return MarkLine});