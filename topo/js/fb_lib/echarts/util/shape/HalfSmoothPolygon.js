define(["require","zrender/shape/Base","zrender/shape/util/smoothBezier","zrender/tool/util","zrender/shape/Polygon"],function(require){function HalfSmoothPolygon(options){Base.call(this,options)}var Base=require("zrender/shape/Base"),smoothBezier=require("zrender/shape/util/smoothBezier"),zrUtil=require("zrender/tool/util");HalfSmoothPolygon.prototype={type:"half-smooth-polygon",buildPath:function(ctx,style){var pointList=style.pointList;if(!(pointList.length<2))if(style.smooth){var controlPoints=smoothBezier(pointList.slice(0,-2),style.smooth,!1,style.smoothConstraint);ctx.moveTo(pointList[0][0],pointList[0][1]);for(var cp1,cp2,p,l=pointList.length,i=0;l-3>i;i++){cp1=controlPoints[2*i];cp2=controlPoints[2*i+1];p=pointList[i+1];ctx.bezierCurveTo(cp1[0],cp1[1],cp2[0],cp2[1],p[0],p[1])}ctx.lineTo(pointList[l-2][0],pointList[l-2][1]);ctx.lineTo(pointList[l-1][0],pointList[l-1][1]);ctx.lineTo(pointList[0][0],pointList[0][1])}else require("zrender/shape/Polygon").prototype.buildPath(ctx,style)}};zrUtil.inherits(HalfSmoothPolygon,Base);return HalfSmoothPolygon});