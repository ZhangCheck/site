define([],function(){function getBbox(json,specialArea){specialArea=specialArea||{};json.srcSize||parseSrcSize(json,specialArea);return json.srcSize}function parseSrcSize(json,specialArea){specialArea=specialArea||{};convertorParse.xmin=360;convertorParse.xmax=-360;convertorParse.ymin=180;convertorParse.ymax=-180;for(var geometries,shape,shapes=json.features,i=0,len=shapes.length;len>i;i++){shape=shapes[i];if(!shape.properties.name||!specialArea[shape.properties.name])switch(shape.type){case"Feature":convertorParse[shape.geometry.type](shape.geometry.coordinates);break;case"GeometryCollection":geometries=shape.geometries;for(var j=0,len2=geometries.length;len2>j;j++)convertorParse[geometries[j].type](geometries[j].coordinates)}}json.srcSize={left:1*convertorParse.xmin.toFixed(4),top:1*convertorParse.ymin.toFixed(4),width:1*(convertorParse.xmax-convertorParse.xmin).toFixed(4),height:1*(convertorParse.ymax-convertorParse.ymin).toFixed(4)};return json}function geoJson2Path(json,transform,specialArea){function pushApath(gm,shape){shapeType=gm.type;shapeCoordinates=gm.coordinates;convertor._bbox={xmin:360,xmax:-360,ymin:180,ymax:-180};str=convertor[shapeType](shapeCoordinates);pathArray.push({path:str,cp:shape.properties.cp?convertor.makePoint(shape.properties.cp):convertor.makePoint([(convertor._bbox.xmin+convertor._bbox.xmax)/2,(convertor._bbox.ymin+convertor._bbox.ymax)/2]),properties:shape.properties,id:shape.id})}specialArea=specialArea||{};convertor.scale=null;convertor.offset=null;json.srcSize||parseSrcSize(json,specialArea);transform.offset={x:json.srcSize.left,y:json.srcSize.top,left:transform.OffsetLeft||0,top:transform.OffsetTop||0};convertor.scale=transform.scale;convertor.offset=transform.offset;for(var geometries,val,shape,shapes=json.features,pathArray=[],i=0,len=shapes.length;len>i;i++){shape=shapes[i];if(!shape.properties.name||!specialArea[shape.properties.name])if("Feature"==shape.type)pushApath(shape.geometry,shape);else if("GeometryCollection"==shape.type){geometries=shape.geometries;for(var j=0,len2=geometries.length;len2>j;j++){val=geometries[j];pushApath(val,val)}}}var shapeType,shapeCoordinates,str;return pathArray}function pos2geo(obj,p){var x,y;if(p instanceof Array){x=1*p[0];y=1*p[1]}else{x=1*p.x;y=1*p.y}x=x/obj.scale.x+obj.offset.x-168.5;x=x>180?x-360:x;y=90-(y/obj.scale.y+obj.offset.y);return[x,y]}function geo2pos(obj,p){convertor.offset=obj.offset;convertor.scale=obj.scale;return p instanceof Array?convertor.makePoint([1*p[0],1*p[1]]):convertor.makePoint([1*p.x,1*p.y])}var convertor={formatPoint:function(p){return[(p[0]<-168.5&&p[1]>63.8?p[0]+360:p[0])+168.5,90-p[1]]},makePoint:function(p){var self=this,point=self.formatPoint(p);self._bbox.xmin>p[0]&&(self._bbox.xmin=p[0]);self._bbox.xmax<p[0]&&(self._bbox.xmax=p[0]);self._bbox.ymin>p[1]&&(self._bbox.ymin=p[1]);self._bbox.ymax<p[1]&&(self._bbox.ymax=p[1]);var x=(point[0]-convertor.offset.x)*convertor.scale.x+convertor.offset.left,y=(point[1]-convertor.offset.y)*convertor.scale.y+convertor.offset.top;return[x,y]},Point:function(coordinates){coordinates=this.makePoint(coordinates);return coordinates.join(",")},LineString:function(coordinates){for(var point,str="",i=0,len=coordinates.length;len>i;i++){point=convertor.makePoint(coordinates[i]);str=0===i?"M"+point.join(","):str+"L"+point.join(",")}return str},Polygon:function(coordinates){for(var str="",i=0,len=coordinates.length;len>i;i++)str=str+convertor.LineString(coordinates[i])+"z";return str},MultiPoint:function(coordinates){for(var arr=[],i=0,len=coordinates.length;len>i;i++)arr.push(convertor.Point(coordinates[i]));return arr},MultiLineString:function(coordinates){for(var str="",i=0,len=coordinates.length;len>i;i++)str+=convertor.LineString(coordinates[i]);return str},MultiPolygon:function(coordinates){for(var str="",i=0,len=coordinates.length;len>i;i++)str+=convertor.Polygon(coordinates[i]);return str}},convertorParse={formatPoint:convertor.formatPoint,makePoint:function(p){var self=this,point=self.formatPoint(p),x=point[0],y=point[1];self.xmin>x&&(self.xmin=x);self.xmax<x&&(self.xmax=x);self.ymin>y&&(self.ymin=y);self.ymax<y&&(self.ymax=y)},Point:function(coordinates){this.makePoint(coordinates)},LineString:function(coordinates){for(var i=0,len=coordinates.length;len>i;i++)this.makePoint(coordinates[i])},Polygon:function(coordinates){for(var i=0,len=coordinates.length;len>i;i++)this.LineString(coordinates[i])},MultiPoint:function(coordinates){for(var i=0,len=coordinates.length;len>i;i++)this.Point(coordinates[i])},MultiLineString:function(coordinates){for(var i=0,len=coordinates.length;len>i;i++)this.LineString(coordinates[i])},MultiPolygon:function(coordinates){for(var i=0,len=coordinates.length;len>i;i++)this.Polygon(coordinates[i])}};return{getBbox:getBbox,geoJson2Path:geoJson2Path,pos2geo:pos2geo,geo2pos:geo2pos}});