function encodePolygon(coordinate,encodeOffsets){var result="",prevX=quantize(coordinate[0][0]),prevY=quantize(coordinate[0][1]);encodeOffsets[0]=prevX;encodeOffsets[1]=prevY;for(var i=0;i<coordinate.length;i++){var point=coordinate[i];result+=encode(point[0],prevX);result+=encode(point[1],prevY);prevX=quantize(point[0]);prevY=quantize(point[1])}return result}function addAMDWrapper(jsonStr){return["define(function() {","    return "+jsonStr+";","});"].join("\n")}function encode(val,prev){val=quantize(val);val-=prev;(val<<1^val>>15)+64===8232&&val--;val=val<<1^val>>15;return String.fromCharCode(val+64)}function quantize(val){return Math.ceil(1024*val)}var fs=require("fs"),glob=require("glob");glob("geoJson/*.json",{},function(err,files){files.forEach(function(file){var output="../"+file.replace(".json",".js"),rawStr=fs.readFileSync(file,"utf8"),json=JSON.parse(rawStr);console.log(output);json.UTF8Encoding=!0;var features=json.features;if(features){features.forEach(function(feature){var encodeOffsets=feature.geometry.encodeOffsets=[],coordinates=feature.geometry.coordinates;"Polygon"===feature.geometry.type?coordinates.forEach(function(coordinate,idx){coordinates[idx]=encodePolygon(coordinate,encodeOffsets[idx]=[])}):"MultiPolygon"===feature.geometry.type&&coordinates.forEach(function(polygon,idx1){encodeOffsets[idx1]=[];polygon.forEach(function(coordinate,idx2){coordinates[idx1][idx2]=encodePolygon(coordinate,encodeOffsets[idx1][idx2]=[])})})});fs.writeFileSync(output,addAMDWrapper(JSON.stringify(json)),"utf8")}})});