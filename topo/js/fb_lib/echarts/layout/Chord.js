define(["require"],function(require){var ChordLayout=function(opts){opts=opts||{};this.sort=opts.sort||null;this.sortSub=opts.sortSub||null;this.padding=.05;this.startAngle=opts.startAngle||0;this.clockWise=null==opts.clockWise?!1:opts.clockWise;this.center=opts.center||[0,0];this.directed=!0};ChordLayout.prototype.run=function(graphs){graphs instanceof Array||(graphs=[graphs]);var gl=graphs.length;if(gl){for(var graph0=graphs[0],nl=graph0.nodes.length,groups=[],sumSize=0,i=0;nl>i;i++){var g0node=graph0.nodes[i],group={size:0,subGroups:[],node:g0node};groups.push(group);for(var sumWeight=0,k=0;k<graphs.length;k++){var graph=graphs[k],node=graph.getNodeById(g0node.id);if(node){group.size+=node.layout.size;for(var edges=this.directed?node.outEdges:node.edges,j=0;j<edges.length;j++){var e=edges[j],w=e.layout.weight;group.subGroups.push({weight:w,edge:e,graph:graph});sumWeight+=w}}}sumSize+=group.size;for(var multiplier=group.size/sumWeight,j=0;j<group.subGroups.length;j++)group.subGroups[j].weight*=multiplier;if("ascending"===this.sortSub)group.subGroups.sort(compareSubGroups);else if("descending"===this.sort){group.subGroups.sort(compareSubGroups);group.subGroups.reverse()}}if("ascending"===this.sort)groups.sort(compareGroups);else if("descending"===this.sort){groups.sort(compareGroups);groups.reverse()}for(var multiplier=(2*Math.PI-this.padding*nl)/sumSize,angle=this.startAngle,sign=this.clockWise?1:-1,i=0;nl>i;i++){var group=groups[i];group.node.layout.startAngle=angle;group.node.layout.endAngle=angle+sign*group.size*multiplier;group.node.layout.subGroups=[];for(var j=0;j<group.subGroups.length;j++){var subGroup=group.subGroups[j];subGroup.edge.layout.startAngle=angle;angle+=sign*subGroup.weight*multiplier;subGroup.edge.layout.endAngle=angle}angle=group.node.layout.endAngle+sign*this.padding}}};var compareSubGroups=function(a,b){return a.weight-b.weight},compareGroups=function(a,b){return a.size-b.size};return ChordLayout});