define(["require","./vector"],function(require){function isAroundZero(val){return val>-EPSILON&&EPSILON>val}function isNotAroundZero(val){return val>EPSILON||-EPSILON>val}function cubicAt(p0,p1,p2,p3,t){var onet=1-t;return onet*onet*(onet*p0+3*t*p1)+t*t*(t*p3+3*onet*p2)}function cubicDerivativeAt(p0,p1,p2,p3,t){var onet=1-t;return 3*(((p1-p0)*onet+2*(p2-p1)*t)*onet+(p3-p2)*t*t)}function cubicRootAt(p0,p1,p2,p3,val,roots){var a=p3+3*(p1-p2)-p0,b=3*(p2-2*p1+p0),c=3*(p1-p0),d=p0-val,A=b*b-3*a*c,B=b*c-9*a*d,C=c*c-3*b*d,n=0;if(isAroundZero(A)&&isAroundZero(B))if(isAroundZero(b))roots[0]=0;else{var t1=-c/b;t1>=0&&1>=t1&&(roots[n++]=t1)}else{var disc=B*B-4*A*C;if(isAroundZero(disc)){var K=B/A,t1=-b/a+K,t2=-K/2;t1>=0&&1>=t1&&(roots[n++]=t1);t2>=0&&1>=t2&&(roots[n++]=t2)}else if(disc>0){var discSqrt=Math.sqrt(disc),Y1=A*b+1.5*a*(-B+discSqrt),Y2=A*b+1.5*a*(-B-discSqrt);Y1=0>Y1?-Math.pow(-Y1,ONE_THIRD):Math.pow(Y1,ONE_THIRD);Y2=0>Y2?-Math.pow(-Y2,ONE_THIRD):Math.pow(Y2,ONE_THIRD);var t1=(-b-(Y1+Y2))/(3*a);t1>=0&&1>=t1&&(roots[n++]=t1)}else{var T=(2*A*b-3*a*B)/(2*Math.sqrt(A*A*A)),theta=Math.acos(T)/3,ASqrt=Math.sqrt(A),tmp=Math.cos(theta),t1=(-b-2*ASqrt*tmp)/(3*a),t2=(-b+ASqrt*(tmp+THREE_SQRT*Math.sin(theta)))/(3*a),t3=(-b+ASqrt*(tmp-THREE_SQRT*Math.sin(theta)))/(3*a);t1>=0&&1>=t1&&(roots[n++]=t1);t2>=0&&1>=t2&&(roots[n++]=t2);t3>=0&&1>=t3&&(roots[n++]=t3)}}return n}function cubicExtrema(p0,p1,p2,p3,extrema){var b=6*p2-12*p1+6*p0,a=9*p1+3*p3-3*p0-9*p2,c=3*p1-3*p0,n=0;if(isAroundZero(a)){if(isNotAroundZero(b)){var t1=-c/b;t1>=0&&1>=t1&&(extrema[n++]=t1)}}else{var disc=b*b-4*a*c;if(isAroundZero(disc))extrema[0]=-b/(2*a);else if(disc>0){var discSqrt=Math.sqrt(disc),t1=(-b+discSqrt)/(2*a),t2=(-b-discSqrt)/(2*a);t1>=0&&1>=t1&&(extrema[n++]=t1);t2>=0&&1>=t2&&(extrema[n++]=t2)}}return n}function cubicSubdivide(p0,p1,p2,p3,t,out){var p01=(p1-p0)*t+p0,p12=(p2-p1)*t+p1,p23=(p3-p2)*t+p2,p012=(p12-p01)*t+p01,p123=(p23-p12)*t+p12,p0123=(p123-p012)*t+p012;out[0]=p0;out[1]=p01;out[2]=p012;out[3]=p0123;out[4]=p0123;out[5]=p123;out[6]=p23;out[7]=p3}function cubicProjectPoint(x0,y0,x1,y1,x2,y2,x3,y3,x,y,out){var t,interval=.005,d=1/0;_v0[0]=x;_v0[1]=y;for(var _t=0;1>_t;_t+=.05){_v1[0]=cubicAt(x0,x1,x2,x3,_t);_v1[1]=cubicAt(y0,y1,y2,y3,_t);var d1=vector.distSquare(_v0,_v1);if(d>d1){t=_t;d=d1}}d=1/0;for(var i=0;32>i&&!(EPSILON>interval);i++){var prev=t-interval,next=t+interval;_v1[0]=cubicAt(x0,x1,x2,x3,prev);_v1[1]=cubicAt(y0,y1,y2,y3,prev);var d1=vector.distSquare(_v1,_v0);if(prev>=0&&d>d1){t=prev;d=d1}else{_v2[0]=cubicAt(x0,x1,x2,x3,next);_v2[1]=cubicAt(y0,y1,y2,y3,next);var d2=vector.distSquare(_v2,_v0);if(1>=next&&d>d2){t=next;d=d2}else interval*=.5}}if(out){out[0]=cubicAt(x0,x1,x2,x3,t);out[1]=cubicAt(y0,y1,y2,y3,t)}return Math.sqrt(d)}function quadraticAt(p0,p1,p2,t){var onet=1-t;return onet*(onet*p0+2*t*p1)+t*t*p2}function quadraticDerivativeAt(p0,p1,p2,t){return 2*((1-t)*(p1-p0)+t*(p2-p1))}function quadraticRootAt(p0,p1,p2,val,roots){var a=p0-2*p1+p2,b=2*(p1-p0),c=p0-val,n=0;if(isAroundZero(a)){if(isNotAroundZero(b)){var t1=-c/b;t1>=0&&1>=t1&&(roots[n++]=t1)}}else{var disc=b*b-4*a*c;if(isAroundZero(disc)){var t1=-b/(2*a);t1>=0&&1>=t1&&(roots[n++]=t1)}else if(disc>0){var discSqrt=Math.sqrt(disc),t1=(-b+discSqrt)/(2*a),t2=(-b-discSqrt)/(2*a);t1>=0&&1>=t1&&(roots[n++]=t1);t2>=0&&1>=t2&&(roots[n++]=t2)}}return n}function quadraticExtremum(p0,p1,p2){var divider=p0+p2-2*p1;return 0===divider?.5:(p0-p1)/divider}function quadraticSubdivide(p0,p1,p2,t,out){var p01=(p1-p0)*t+p0,p12=(p2-p1)*t+p1,p012=(p12-p01)*t+p01;out[0]=p0;out[1]=p01;out[2]=p012;out[3]=p012;out[4]=p12;out[5]=p2}function quadraticProjectPoint(x0,y0,x1,y1,x2,y2,x,y,out){var t,interval=.005,d=1/0;_v0[0]=x;_v0[1]=y;for(var _t=0;1>_t;_t+=.05){_v1[0]=quadraticAt(x0,x1,x2,_t);_v1[1]=quadraticAt(y0,y1,y2,_t);var d1=vector.distSquare(_v0,_v1);if(d>d1){t=_t;d=d1}}d=1/0;for(var i=0;32>i&&!(EPSILON>interval);i++){var prev=t-interval,next=t+interval;_v1[0]=quadraticAt(x0,x1,x2,prev);_v1[1]=quadraticAt(y0,y1,y2,prev);var d1=vector.distSquare(_v1,_v0);if(prev>=0&&d>d1){t=prev;d=d1}else{_v2[0]=quadraticAt(x0,x1,x2,next);_v2[1]=quadraticAt(y0,y1,y2,next);var d2=vector.distSquare(_v2,_v0);if(1>=next&&d>d2){t=next;d=d2}else interval*=.5}}if(out){out[0]=quadraticAt(x0,x1,x2,t);out[1]=quadraticAt(y0,y1,y2,t)}return Math.sqrt(d)}var vector=require("./vector"),EPSILON=1e-4,THREE_SQRT=Math.sqrt(3),ONE_THIRD=1/3,_v0=vector.create(),_v1=vector.create(),_v2=vector.create();return{cubicAt:cubicAt,cubicDerivativeAt:cubicDerivativeAt,cubicRootAt:cubicRootAt,cubicExtrema:cubicExtrema,cubicSubdivide:cubicSubdivide,cubicProjectPoint:cubicProjectPoint,quadraticAt:quadraticAt,quadraticDerivativeAt:quadraticDerivativeAt,quadraticRootAt:quadraticRootAt,quadraticExtremum:quadraticExtremum,quadraticSubdivide:quadraticSubdivide,quadraticProjectPoint:quadraticProjectPoint}});