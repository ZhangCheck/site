define(["require","./tool/util","./Group"],function(require){"use strict";function shapeCompareFunc(a,b){return a.zlevel==b.zlevel?a.z==b.z?a.__renderidx-b.__renderidx:a.z-b.z:a.zlevel-b.zlevel}var util=require("./tool/util"),Group=require("./Group"),defaultIterateOption={hover:!1,normal:"down",update:!1},Storage=function(){this._elements={};this._hoverElements=[];this._roots=[];this._shapeList=[];this._shapeListOffset=0};Storage.prototype.iterShape=function(fun,option){option||(option=defaultIterateOption);if(option.hover)for(var i=0,l=this._hoverElements.length;l>i;i++){var el=this._hoverElements[i];el.updateTransform();if(fun(el))return this}option.update&&this.updateShapeList();switch(option.normal){case"down":for(var l=this._shapeList.length;l--;)if(fun(this._shapeList[l]))return this;break;default:for(var i=0,l=this._shapeList.length;l>i;i++)if(fun(this._shapeList[i]))return this}return this};Storage.prototype.getHoverShapes=function(update){for(var hoverElements=[],i=0,l=this._hoverElements.length;l>i;i++){hoverElements.push(this._hoverElements[i]);var target=this._hoverElements[i].hoverConnect;if(target){var shape;target=target instanceof Array?target:[target];for(var j=0,k=target.length;k>j;j++){shape=target[j].id?target[j]:this.get(target[j]);shape&&hoverElements.push(shape)}}}hoverElements.sort(shapeCompareFunc);if(update)for(var i=0,l=hoverElements.length;l>i;i++)hoverElements[i].updateTransform();return hoverElements};Storage.prototype.getShapeList=function(update){update&&this.updateShapeList();return this._shapeList};Storage.prototype.updateShapeList=function(){this._shapeListOffset=0;for(var i=0,len=this._roots.length;len>i;i++){var root=this._roots[i];this._updateAndAddShape(root)}this._shapeList.length=this._shapeListOffset;for(var i=0,len=this._shapeList.length;len>i;i++)this._shapeList[i].__renderidx=i;this._shapeList.sort(shapeCompareFunc)};Storage.prototype._updateAndAddShape=function(el,clipShapes){if(!el.ignore){el.updateTransform();if(el.clipShape){el.clipShape.parent=el;el.clipShape.updateTransform();if(clipShapes){clipShapes=clipShapes.slice();clipShapes.push(el.clipShape)}else clipShapes=[el.clipShape]}if("group"==el.type){for(var i=0;i<el._children.length;i++){var child=el._children[i];child.__dirty=el.__dirty||child.__dirty;this._updateAndAddShape(child,clipShapes)}el.__dirty=!1}else{el.__clipShapes=clipShapes;this._shapeList[this._shapeListOffset++]=el}}};Storage.prototype.mod=function(el,params){"string"==typeof el&&(el=this._elements[el]);if(el){el.modSelf();if(params)if(params.parent||params._storage||params.__clipShapes){var target={};for(var name in params)"parent"!==name&&"_storage"!==name&&"__clipShapes"!==name&&params.hasOwnProperty(name)&&(target[name]=params[name]);util.merge(el,target,!0)}else util.merge(el,params,!0)}return this};Storage.prototype.drift=function(shapeId,dx,dy){var shape=this._elements[shapeId];if(shape){shape.needTransform=!0;"horizontal"===shape.draggable?dy=0:"vertical"===shape.draggable&&(dx=0);(!shape.ondrift||shape.ondrift&&!shape.ondrift(dx,dy))&&shape.drift(dx,dy)}return this};Storage.prototype.addHover=function(shape){shape.updateNeedTransform();this._hoverElements.push(shape);return this};Storage.prototype.delHover=function(){this._hoverElements=[];return this};Storage.prototype.hasHoverShape=function(){return this._hoverElements.length>0};Storage.prototype.addRoot=function(el){if(!this._elements[el.id]){el instanceof Group&&el.addChildrenToStorage(this);this.addToMap(el);this._roots.push(el)}};Storage.prototype.delRoot=function(elId){if("undefined"!=typeof elId)if(elId instanceof Array)for(var i=0,l=elId.length;l>i;i++)this.delRoot(elId[i]);else{var el;el="string"==typeof elId?this._elements[elId]:elId;var idx=util.indexOf(this._roots,el);if(idx>=0){this.delFromMap(el.id);this._roots.splice(idx,1);el instanceof Group&&el.delChildrenFromStorage(this)}}else{for(var i=0;i<this._roots.length;i++){var root=this._roots[i];root instanceof Group&&root.delChildrenFromStorage(this)}this._elements={};this._hoverElements=[];this._roots=[];this._shapeList=[];this._shapeListOffset=0}};Storage.prototype.addToMap=function(el){el instanceof Group&&(el._storage=this);el.modSelf();this._elements[el.id]=el;return this};Storage.prototype.get=function(elId){return this._elements[elId]};Storage.prototype.delFromMap=function(elId){var el=this._elements[elId];if(el){delete this._elements[elId];el instanceof Group&&(el._storage=null)}return this};Storage.prototype.dispose=function(){this._elements=this._renderList=this._roots=this._hoverElements=null};return Storage});