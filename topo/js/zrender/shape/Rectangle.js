define(["require","./Base","../tool/util"],function(require){var Base=require("./Base"),Rectangle=function(options){Base.call(this,options)};Rectangle.prototype={type:"rectangle",_buildRadiusPath:function(ctx,style){var r1,r2,r3,r4,x=style.x,y=style.y,width=style.width,height=style.height,r=style.radius;if("number"==typeof r)r1=r2=r3=r4=r;else if(r instanceof Array)if(1===r.length)r1=r2=r3=r4=r[0];else if(2===r.length){r1=r3=r[0];r2=r4=r[1]}else if(3===r.length){r1=r[0];r2=r4=r[1];r3=r[2]}else{r1=r[0];r2=r[1];r3=r[2];r4=r[3]}else r1=r2=r3=r4=0;var total;if(r1+r2>width){total=r1+r2;r1*=width/total;r2*=width/total}if(r3+r4>width){total=r3+r4;r3*=width/total;r4*=width/total}if(r2+r3>height){total=r2+r3;r2*=height/total;r3*=height/total}if(r1+r4>height){total=r1+r4;r1*=height/total;r4*=height/total}ctx.moveTo(x+r1,y);ctx.lineTo(x+width-r2,y);0!==r2&&ctx.quadraticCurveTo(x+width,y,x+width,y+r2);ctx.lineTo(x+width,y+height-r3);0!==r3&&ctx.quadraticCurveTo(x+width,y+height,x+width-r3,y+height);ctx.lineTo(x+r4,y+height);0!==r4&&ctx.quadraticCurveTo(x,y+height,x,y+height-r4);ctx.lineTo(x,y+r1);0!==r1&&ctx.quadraticCurveTo(x,y,x+r1,y)},buildPath:function(ctx,style){if(style.radius)this._buildRadiusPath(ctx,style);else{ctx.moveTo(style.x,style.y);ctx.lineTo(style.x+style.width,style.y);ctx.lineTo(style.x+style.width,style.y+style.height);ctx.lineTo(style.x,style.y+style.height);ctx.lineTo(style.x,style.y)}ctx.closePath()},getRect:function(style){if(style.__rect)return style.__rect;var lineWidth;lineWidth="stroke"==style.brushType||"fill"==style.brushType?style.lineWidth||1:0;style.__rect={x:Math.round(style.x-lineWidth/2),y:Math.round(style.y-lineWidth/2),width:style.width+lineWidth,height:style.height+lineWidth};return style.__rect}};require("../tool/util").inherits(Rectangle,Base);return Rectangle});