define(["require","../tool/math","../tool/computeBoundingBox","../tool/vector","./Base","../tool/util"],function(require){var math=require("../tool/math"),computeBoundingBox=require("../tool/computeBoundingBox"),vec2=require("../tool/vector"),Base=require("./Base"),min0=vec2.create(),min1=vec2.create(),max0=vec2.create(),max1=vec2.create(),Sector=function(options){Base.call(this,options)};Sector.prototype={type:"sector",buildPath:function(ctx,style){var x=style.x,y=style.y,r0=style.r0||0,r=style.r,startAngle=style.startAngle,endAngle=style.endAngle,clockWise=style.clockWise||!1;startAngle=math.degreeToRadian(startAngle);endAngle=math.degreeToRadian(endAngle);if(!clockWise){startAngle=-startAngle;endAngle=-endAngle}var unitX=math.cos(startAngle),unitY=math.sin(startAngle);ctx.moveTo(unitX*r0+x,unitY*r0+y);ctx.lineTo(unitX*r+x,unitY*r+y);ctx.arc(x,y,r,startAngle,endAngle,!clockWise);ctx.lineTo(math.cos(endAngle)*r0+x,math.sin(endAngle)*r0+y);0!==r0&&ctx.arc(x,y,r0,endAngle,startAngle,clockWise);ctx.closePath()},getRect:function(style){if(style.__rect)return style.__rect;var x=style.x,y=style.y,r0=style.r0||0,r=style.r,startAngle=math.degreeToRadian(style.startAngle),endAngle=math.degreeToRadian(style.endAngle),clockWise=style.clockWise;if(!clockWise){startAngle=-startAngle;endAngle=-endAngle}if(r0>1)computeBoundingBox.arc(x,y,r0,startAngle,endAngle,!clockWise,min0,max0);else{min0[0]=max0[0]=x;min0[1]=max0[1]=y}computeBoundingBox.arc(x,y,r,startAngle,endAngle,!clockWise,min1,max1);vec2.min(min0,min0,min1);vec2.max(max0,max0,max1);style.__rect={x:min0[0],y:min0[1],width:max0[0]-min0[0],height:max0[1]-min0[1]};return style.__rect}};require("../tool/util").inherits(Sector,Base);return Sector});